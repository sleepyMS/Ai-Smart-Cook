{"version":3,"file":"static/js/275.bb866782.chunk.js","mappings":"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","sources":["components/Registerpage/Registerpage1.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './loginpage.module.css';\r\n\r\nconst Loginpage = () => {\r\n    const navigate = useNavigate();\r\n    const [birthDate, setBirthDate] = useState(\"2000-01-01\");\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n    const IDRef = useRef(null);\r\n    const pwdRef = useRef(null);\r\n    const nameRef = useRef(null);\r\n    const nickRef = useRef(null);\r\n\r\n    const handleBirthDateChange = (e) => {\r\n        setBirthDate(e.target.value);\r\n    };\r\n    //폰 번호 유효성 검사\r\n    const handlePhoneNumberChange = (e) => {\r\n        const value = e.target.value;\r\n        const formattedPhoneNumber = value.replace(/\\D/g, '');\r\n        if (formattedPhoneNumber.length > 11) {\r\n            alert(\"휴대폰 번호는 11자리 이하여야 합니다. 다시 입력해주세요.\");\r\n            e.target.disabled = true;\r\n            setTimeout(() => {\r\n                e.target.disabled = false;\r\n                e.target.focus();\r\n            }, 100); //\r\n        } else {\r\n            if (formattedPhoneNumber.length >= 4 && formattedPhoneNumber.length < 8) {\r\n                setPhoneNumber(`${formattedPhoneNumber.slice(0, 3)}-${formattedPhoneNumber.slice(3)}`);\r\n            } else if (formattedPhoneNumber.length >= 8) {\r\n                setPhoneNumber(`${formattedPhoneNumber.slice(0, 3)}-${formattedPhoneNumber.slice(3, 7)}-${formattedPhoneNumber.slice(7)}`);\r\n            } else {\r\n                setPhoneNumber(formattedPhoneNumber);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        // 이메일 형식 검사\r\n        const emailPattern = /\\S+@\\S+\\.\\S+/;\r\n        if (!emailPattern.test(IDRef.current.value)) {\r\n            alert(\"올바른 이메일 주소를 입력해주세요.\");\r\n            IDRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        // 패스워드 유효성 검사\r\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,20}$/;\r\n        if (!passwordPattern.test(pwdRef.current.value)) {\r\n            alert(\"패스워드는 영어, 숫자, 특수문자를 포함한 6~20자 이내로 입력해주세요.\");\r\n            pwdRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        // 유효성 검사 통과시에만 회원가입 요청\r\n        try {\r\n            const emailResponse = await fetch(`http://localhost:817/peoples/?ID=${IDRef.current.value}`);\r\n            const numResponse = await fetch(`http://localhost:817/peoples/?num=${phoneNumber}`);\r\n            const pwdResponse = await fetch(`http://localhost:817/peoples/?pwd=${pwdRef.current.value}`);\r\n            const nickResponse = await fetch(`http://localhost:817/peoples/?nick=${nickRef.current.value}`);\r\n    \r\n            const emailData = await emailResponse.json();\r\n            const numData = await numResponse.json();\r\n            const pwdData = await pwdResponse.json();\r\n            const nickData = await nickResponse.json();\r\n    \r\n            if (emailData.length > 0 ){\r\n                alert(\"이미 같은 이메일 정보가 존재합니다. 다시 입력해주세요.\");\r\n                return;\r\n            } \r\n            else if(numData.length > 0){\r\n                alert(\"이미 같은 휴대폰번호 정보가 존재합니다. 다시 입력해주세요.\");\r\n                return;\r\n            }\r\n            else if(pwdData.length > 0){\r\n                alert(\"이미 같은 비밀번호 정보가 존재합니다. 다시 입력해주세요.\");\r\n                return;\r\n            }\r\n            else if(nickData.length > 0){\r\n                alert(\"이미 같은 닉네임 정보가 존재합니다. 다시 입력해주세요.\");\r\n                return;\r\n            }\r\n            else {\r\n                const res = await fetch(`http://localhost:817/peoples/`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        ID: IDRef.current.value,\r\n                        name: nameRef.current.value,\r\n                        pwd: pwdRef.current.value,\r\n                        birth: birthDate,\r\n                        phone: phoneNumber,\r\n                        nick: nickRef.current.value\r\n                    }),\r\n                });\r\n                if (res.ok) {\r\n                    alert(\"생성이 완료되었습니다.\");\r\n                    navigate('/');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className='header_logo'>\r\n                <a href=\"/\">\r\n                    <span>MOTIV</span>\r\n                </a>\r\n            </h1>\r\n            <div style={{ \r\n                display: 'flex', justifyContent: 'center', alignItems: 'center', \r\n                width: '100%', height: '100vh'\r\n                }}>\r\n                <form  style={{ display: 'flex', flexDirection: 'column'}} onSubmit={onSubmit} >\r\n                    <label>이름</label>\r\n                    <input type=\"text\" placeholder=\"김정호\" ref ={nameRef} required/>\r\n                    <label>별명</label>\r\n                    <input type=\"text\" placeholder=\"필수 사항 아님\" ref ={nickRef}/>\r\n                    <label>Email</label>\r\n                    <input type=\"email\" placeholder=\"com@example.co.kr\" ref ={IDRef} required/>\r\n                    <label target=\"test\">Password</label>\r\n                    <input id=\"test\"\r\n                        type={passwordVisible ? \"text\" : \"password\"} \r\n                        placeholder=\"*********\" \r\n                        ref ={pwdRef}\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onBlur={() => pwdRef.current.type = \"password\"}\r\n                        required\r\n                    />\r\n                    <label>생년월일</label>\r\n                    <input type=\"date\" value={birthDate} onChange={handleBirthDateChange}/>\r\n                    <label>휴대폰번호</label>\r\n                    <input type=\"text\" placeholder=\"010-1234-5678\" value={phoneNumber} onChange={handlePhoneNumberChange} required/>\r\n                    <br />\r\n                    <button>완료</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginpage;\r\n"],"names":["Loginpage","navigate","useNavigate","birthDate","setBirthDate","useState","phoneNumber","setPhoneNumber","passwordVisible","setPasswordVisible","IDRef","useRef","pwdRef","nameRef","nickRef","_jsxs","_Fragment","children","_jsx","className","href","style","display","justifyContent","alignItems","width","height","flexDirection","onSubmit","async","e","preventDefault","test","current","value","alert","focus","emailResponse","fetch","concat","numResponse","pwdResponse","nickResponse","emailData","json","numData","pwdData","nickData","length","method","headers","body","JSON","stringify","ID","name","pwd","birth","phone","nick","ok","error","console","type","placeholder","ref","required","target","id","onClick","stopPropagation","onBlur","onChange","formattedPhoneNumber","replace","disabled","setTimeout","slice"],"sourceRoot":""}