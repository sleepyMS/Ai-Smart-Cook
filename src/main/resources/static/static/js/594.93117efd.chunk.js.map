{"version":3,"file":"static/js/594.93117efd.chunk.js","mappings":"4KAIA,MAmDA,EAnDoBA,KAClB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAsBvC,OApBAG,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,MAAM,iCACvBC,QAAaF,EAASG,OAG5B,GAFAT,EAAWQ,IAENF,EAASI,GACZ,MAAM,IAAIC,MAAM,+FAEpB,CAAE,MAAOC,GACPC,QAAQD,MAAM,sFAAsBA,EACtC,CAAC,QACCT,GAAW,EACb,GAGFW,EAAW,GACV,KAGDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaF,UACzBC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAI,IAAGJ,SAAC,aAEhBD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCACHd,GACCe,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAEHC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SACvBjB,EAAQsB,OAAS,GAAKtB,EAAQuB,KAAI,CAACC,EAAQC,KAC1CT,EAAAA,EAAAA,MAAA,MAAgBG,UAAU,aAAYF,SAAA,EAEpCC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,kBAAAK,OAAoBF,EAAOG,IAAKV,UACtCD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,iBAAKO,EAAOI,iBAElBV,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,EAAOK,SALJJ,YAWb,C","sources":["components/Recipeboard/Recipeboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Link 추가\nimport \"./Recipeboard.css\"\n\nconst Recipeboard = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:817/recipes/');\n        const data = await response.json();\n        setRecipes(data); \n\n        if (!response.ok) {\n          throw new Error('데이터를 불러오는데 실패했습니다');\n        }\n      } catch (error) {\n        console.error('데이터를 불러오는 중 오류 발생:', error);\n      } finally {\n        setLoading(false); // 데이터 로딩 완료 후 로딩 상태를 false로 변경\n      }\n    };\n    \n    fetchData(); // fetchData 함수 호출\n  }, []); // 배열의 값이 바뀔 떄만 실행 -> 의존성 배열 , 빈 배열은 실행 한번만\n\n  return (\n    <div>\n      <h1 className='header_logo'>\n        <Link to= '/'>MOTIV</Link>\n      </h1>\n      <div className=\"board-container\">\n        <h2>게시물 목록</h2>\n        {loading ? (\n          <p>Loading...</p> // 로딩 중일 때 표시될 내용\n        ) : (\n          <ul className=\"board-list\">\n            {recipes.length > 0 && recipes.map((recipe, index) => (\n              <li key={index} className=\"board-item\">\n                {/* Link를 이용해 클릭 시 URL 변경 */}\n                <Link to={`/recipeinboard/${recipe.id}`}>\n                  <h3>제목: {recipe.titleBoard}</h3>\n                </Link>\n                <p>{recipe.name}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Recipeboard;\n"],"names":["Recipeboard","recipes","setRecipes","useState","loading","setLoading","useEffect","async","response","fetch","data","json","ok","Error","error","console","fetchData","_jsxs","children","_jsx","className","Link","to","length","map","recipe","index","concat","id","titleBoard","name"],"sourceRoot":""}