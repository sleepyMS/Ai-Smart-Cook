{"version":3,"file":"static/js/955.86c86e96.chunk.js","mappings":"4KAIA,MA+JA,EA/JiBA,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAAC,IACvCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAGnCO,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAuBC,MAAM,gCAC7BC,QAAmBF,EAAeG,OACxCb,EAAUY,GAEV,MAAME,QAAsBH,MAAM,+BAC5BI,QAAkBD,EAAcD,OAGtC,GAFAN,EAASQ,IAEJL,EAAeM,KAAOF,EAAcE,GACvC,MAAM,IAAIC,MAAM,+FAEpB,CAAE,MAAOC,GACPC,QAAQD,MAAM,sFAAsBA,EACtC,CAAC,QACCf,GAAW,EACb,GAGFiB,EAAW,GACV,IAgGH,OAZAZ,EAAAA,EAAAA,YAAU,KACR,MAAMa,EAAmBC,aAAaC,QAAQ,cAC1CF,GACFhB,EAAcmB,KAAKC,MAAMJ,IAG3B,MAAMK,EAAcJ,aAAaC,QAAQ,QACrCG,GACFnB,EAASiB,KAAKC,MAAMC,GACtB,GACC,KAGDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaF,UACzBC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAI,IAAGJ,SAAC,aAEhBD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCACH1B,GACC2B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAEHC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SACvB7B,EAAOkC,KAAI,CAACC,EAAOC,KAClBR,EAAAA,EAAAA,MAAA,MAAgBG,UAAU,aAAYF,SAAA,EACpCC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAIV,aAAaC,QAAQ,QAAO,YAAAa,OAAeF,EAAMG,IAAO,IAAKC,QAASA,IA1GnED,KACzB,GAAIf,aAAaC,QAAQ,QAAS,CAChC,MAAMgB,EAAgB,IAAKnC,GAC3BmC,EAAcF,IAAOE,EAAcF,IAAO,GAAK,EAC/ChC,EAAckC,GACdjB,aAAakB,QAAQ,aAAchB,KAAKiB,UAAUF,GACpD,MACEG,MAAM,qDACR,EAkGkGC,CAAkBT,EAAMG,IAAIT,UAChHD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,iBAAKM,EAAMU,iBAEjBf,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAMW,QACVlB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,uBAAMxB,EAAW8B,EAAMG,KAAO,KAChCf,aAAaC,QAAQ,UACpBI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQS,QAASA,IArGhB7B,WACnB,MAAMqC,EAAOtB,KAAKC,MAAMH,aAAaC,QAAQ,SAC7C,GAAIuB,IAGyB,IAFV,IAAIxC,GACcyC,WAAUC,GAAQA,EAAKC,UAAYZ,GAAMW,EAAKE,OAASJ,EAAKI,OACjE,CAC5B,MAAMC,EAAapD,EAAOqD,MAAKlB,GAASA,EAAMG,KAAOA,IACrD,IACE,MAAMgB,QAAiB1C,MAAM,6BAA8B,CACzD2C,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMhC,KAAKiB,UAAU,CACnBQ,QAASE,EAAWd,GACpBO,WAAYO,EAAWP,WACvBM,KAAMJ,EAAKI,SAGf,IAAIG,EAASrC,GAOX,MAAM,IAAIC,MAAM,8EAPD,CACf,MAAMwC,QAAqBJ,EAASxC,OAE9B6C,EAAe,IAAIpD,EAAOmD,GAChClD,EAASmD,GACTpC,aAAakB,QAAQ,OAAQhB,KAAKiB,UAAUiB,GAC9C,CAGF,CAAE,MAAOxC,GACPC,QAAQD,MAAM,oEAAmBA,EACnC,CACF,CACF,EAqEyCyC,CAAazB,EAAMG,IAAIT,SAAC,wBAC/CC,EAAAA,EAAAA,KAAA,UAAQS,QAASA,IAlEhB7B,WACnB,MAAMqC,EAAOtB,KAAKC,MAAMH,aAAaC,QAAQ,SAC7C,GAAIuB,EAAM,CACR,MAAMc,EAAoBtD,EAAMyC,WAAUC,GAAQA,EAAKC,UAAYZ,GAAMW,EAAKE,OAASJ,EAAKI,OAE5F,IAA2B,IAAvBU,EAA0B,CAC5B,MAAMC,EAAYvD,EAAMsD,GAExB,IACE,IAAIC,IAAaA,EAAUxB,GAezB,MAAM,IAAIpB,MAAM,4EAVhB,WAJuBN,MAAM,8BAADyB,OAA+ByB,EAAUxB,IAAM,CACzEiB,OAAQ,YAGGtC,GAOX,MAAM,IAAIC,MAAM,8EAPD,CAEf,MAAMyC,EAAe,IAAIpD,GACzBoD,EAAaI,OAAOF,EAAmB,GACvCrD,EAASmD,GACTpC,aAAakB,QAAQ,OAAQhB,KAAKiB,UAAUiB,GAC9C,CAMJ,CAAE,MAAOxC,GACPC,QAAQD,MAAM,oEAAmBA,EACnC,CACF,CACF,GAoCyC6C,CAAa7B,EAAMG,IAAIT,SAAC,wCAGnDD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,8BAAQtB,EAAM0D,QAAOhB,GAAQA,EAAKC,UAAYf,EAAMG,KAAI4B,YAZpD9B,YAkBb,C","sources":["components/QuestionBoard/Questionboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Questionboard.css\";\r\n\r\nconst Question = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewCounts, setViewCounts] = useState({});\r\n  const [likes, setLikes] = useState([]);\r\n\r\n  // 게시판 데이터와 좋아요 정보 가져오기\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const boardsResponse = await fetch('http://localhost:817/boards/');\r\n        const boardsData = await boardsResponse.json();\r\n        setBoards(boardsData);\r\n\r\n        const likesResponse = await fetch('http://localhost:817/likes/');\r\n        const likesData = await likesResponse.json();\r\n        setLikes(likesData);\r\n\r\n        if (!boardsResponse.ok || !likesResponse.ok) {\r\n          throw new Error('데이터를 불러오는데 실패했습니다');\r\n        }\r\n      } catch (error) {\r\n        console.error('데이터를 불러오는 중 오류 발생:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // 조회수 증가 함수\r\n  const increaseViewCount = (id) => {\r\n    if (localStorage.getItem('user')) {\r\n      const newViewCounts = { ...viewCounts };\r\n      newViewCounts[id] = (newViewCounts[id] || 0) + 1;\r\n      setViewCounts(newViewCounts);\r\n      localStorage.setItem('viewCounts', JSON.stringify(newViewCounts));\r\n    } else {\r\n      alert(\"로그인을 해주세요.\");\r\n    }\r\n  };\r\n\r\n // 좋아요 증가 함수\r\nconst increaseLike = async (id) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  if (user) {\r\n    const newLikes = [...likes];\r\n    const existingLikeIndex = newLikes.findIndex(like => like.boardId === id && like.nick === user.nick);\r\n    if (existingLikeIndex === -1) {\r\n      const foundBoard = boards.find(board => board.id === id);\r\n      try {\r\n        const response = await fetch(`http://localhost:817/likes`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            boardId: foundBoard.id,\r\n            titleBoard: foundBoard.titleBoard,\r\n            nick: user.nick \r\n          }),\r\n        });\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          // 좋아요 추가 후 상태 업데이트\r\n          const updatedLikes = [...likes, responseData];\r\n          setLikes(updatedLikes);\r\n          localStorage.setItem('like', JSON.stringify(updatedLikes));\r\n        } else {\r\n          throw new Error('좋아요 추가에 실패했습니다');\r\n        }\r\n      } catch (error) {\r\n        console.error('좋아요 추가 중 오류 발생:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// 좋아요 감소 함수\r\nconst decreaseLike = async (id) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  if (user) {\r\n    const existingLikeIndex = likes.findIndex(like => like.boardId === id && like.nick === user.nick);\r\n\r\n    if (existingLikeIndex !== -1) {\r\n      const foundLike = likes[existingLikeIndex];\r\n\r\n      try {\r\n        if (foundLike && foundLike.id) {\r\n          const response = await fetch(`http://localhost:817/likes/${foundLike.id}`, {\r\n            method: 'DELETE',\r\n          });\r\n\r\n          if (response.ok) {\r\n            // 좋아요 삭제 후 상태 업데이트\r\n            const updatedLikes = [...likes];\r\n            updatedLikes.splice(existingLikeIndex, 1);\r\n            setLikes(updatedLikes);\r\n            localStorage.setItem('like', JSON.stringify(updatedLikes));\r\n          } else {\r\n            throw new Error('좋아요 삭제에 실패했습니다');\r\n          }\r\n        } else {\r\n          throw new Error('좋아요 ID를 찾을 수 없습니다');\r\n        }\r\n      } catch (error) {\r\n        console.error('좋아요 삭제 중 오류 발생:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    const storedViewCounts = localStorage.getItem('viewCounts');\r\n    if (storedViewCounts) {\r\n      setViewCounts(JSON.parse(storedViewCounts));\r\n    }\r\n\r\n    const storedLikes = localStorage.getItem('like');\r\n    if (storedLikes) {\r\n      setLikes(JSON.parse(storedLikes));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='header_logo'>\r\n        <Link to= '/'>MOTIV</Link>\r\n      </h1>\r\n      <div className=\"board-container\">\r\n        <h2>게시물 목록</h2>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <ul className=\"board-list\">\r\n            {boards.map((board, index) => (\r\n              <li key={index} className=\"board-item\">\r\n                <Link to={localStorage.getItem('user') ? `/inboard/${board.id}` : '#'} onClick={() => increaseViewCount(board.id)}>\r\n                  <h3>제목: {board.titleBoard}</h3>\r\n                </Link>\r\n                <p>{board.name}</p>\r\n                <p>조회수: {viewCounts[board.id] || 0}</p>\r\n                {localStorage.getItem('user') && (\r\n                  <div>\r\n                    <button onClick={() => increaseLike(board.id)}>좋아요</button>\r\n                    <button onClick={() => decreaseLike(board.id)}>좋아요 취소</button>\r\n                  </div>\r\n                )}\r\n                <p>좋아요 수: {likes.filter(like => like.boardId === board.id).length}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"names":["Question","boards","setBoards","useState","loading","setLoading","viewCounts","setViewCounts","likes","setLikes","useEffect","async","boardsResponse","fetch","boardsData","json","likesResponse","likesData","ok","Error","error","console","fetchData","storedViewCounts","localStorage","getItem","JSON","parse","storedLikes","_jsxs","children","_jsx","className","Link","to","map","board","index","concat","id","onClick","newViewCounts","setItem","stringify","alert","increaseViewCount","titleBoard","name","user","findIndex","like","boardId","nick","foundBoard","find","response","method","headers","body","responseData","updatedLikes","increaseLike","existingLikeIndex","foundLike","splice","decreaseLike","filter","length"],"sourceRoot":""}