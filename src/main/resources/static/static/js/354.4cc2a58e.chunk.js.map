{"version":3,"file":"static/js/354.4cc2a58e.chunk.js","mappings":"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","sources":["components/Mypage/Load_changepwd.jsx","components/Mypage/Load_changednick.jsx","components/Mypage/Mypage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Load_changepwd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Loadingmodal = ({ onClose }) => {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const navigator = useNavigate();\r\n\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentPassword(e.target.value);\r\n  };\r\n\r\n  const handleChangeNew = (e) => {\r\n    setNewPassword(e.target.value);\r\n  };\r\n\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,20}$/;\r\n        if (!passwordPattern.test(newPassword)) {\r\n            alert(\"패스워드는 영어, 숫자, 특수문자를 포함한 6~20자 이내로 입력해주세요.\");\r\n            return;\r\n        }\r\n        if(currentPassword === newPassword){\r\n          alert(\"현재 사용 중인 비밀번호입니다.\")\r\n          return;\r\n        }\r\n    try {\r\n      const response = await fetch(`http://localhost:817/peoples/${user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n            ID: user.ID,\r\n            name: user.name,\r\n            pwd: newPassword ,\r\n            birth: user.birth,\r\n            phone: user.phone,\r\n            nick: user.nick\r\n        })\r\n      });\r\n        \r\n      if (!response.ok) {\r\n        throw new Error('비밀번호 변경에 실패했습니다.');\r\n      }\r\n\r\n      alert('비밀번호가 성공적으로 변경되었습니다.');\r\n      localStorage.removeItem('user');\r\n      navigator('/');\r\n      onClose(); // 패스워드 변경 후 모달 닫기\r\n    } catch (error) {\r\n      console.error('비밀번호 변경 중 오류 발생:', error);\r\n      setError('비밀번호 변경에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose(); // 모달 닫기\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loading-modal\">\r\n      <div className=\"loading-content\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label>현재 비밀번호</label>\r\n          <div>\r\n            <input type='password' placeholder='Enter your current password' value={currentPassword} onChange={handleChangeCurrent} />\r\n          </div>\r\n          <label>새로운 비밀번호</label>\r\n          <div>\r\n            <input type='password' placeholder='Enter your new password' value={newPassword} onChange={handleChangeNew} />\r\n          </div>\r\n          <label>새로운 비밀번호 확인</label>\r\n          <div>\r\n            <input type='password' placeholder='Confirm your new password' value={confirmPassword} onChange={handleChangeConfirm} />\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n          <button type='submit'>확인</button>\r\n          <button type='button' onClick={handleClose}>닫기</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Loadingmodal;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Load_changepwd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Load_changednick = ({ onClose }) => {\r\n  const [currentNick, setCurrentNick] = useState('');\r\n  const [newNick, setNewNick] = useState('');\r\n  const [confirmNick, setConfirmNick] = useState('');\r\n  const [error, setError] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const navigator = useNavigate();\r\n\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentNick(e.target.value);\r\n  };\r\n\r\n  const handleChangeNew = (e) => {\r\n    setNewNick(e.target.value);\r\n  };\r\n\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmNick(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const nickResponse = await fetch(`http://localhost:817/peoples/?nick=${newNick}`);\r\n      const nickData = await nickResponse.json();\r\n      if(nickData.length > 0){\r\n        alert(\"이미 같은 닉네임 정보가 존재합니다. 다시 입력해주세요.\");\r\n        return;\r\n      }\r\n      else{\r\n      const response = await fetch(`http://localhost:817/peoples/${user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n            ID: user.ID,\r\n            name: user.name,\r\n            pwd: user.pwd ,\r\n            birth: user.birth,\r\n            phone: user.phone,\r\n            nick: newNick\r\n        })\r\n      });\r\n      \r\n        \r\n      if (!response.ok) {\r\n        throw new Error('닉네임 변경에 실패했습니다.');\r\n      }\r\n\r\n      alert('닉네임이 성공적으로 변경되었습니다.');\r\n      localStorage.removeItem('user');\r\n      navigator('/');\r\n      onClose(); // 패스워드 변경 후 모달 닫기\r\n    } }catch (error) {\r\n      console.error('닉네임 변경 중 오류 발생:', error);\r\n      setError('닉네임 변경에 실패했습니다.');\r\n    }\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose(); // 모달 닫기\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loading-modal\">\r\n      <div className=\"loading-content\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label>현재 닉네임</label>\r\n          <div>\r\n            <input type='text' placeholder='Enter your nick' value={currentNick} onChange={handleChangeCurrent} />\r\n          </div>\r\n          <label>새로운 닉네임</label>\r\n          <div>\r\n            <input type='text' placeholder='Enter your new nick' value={newNick} onChange={handleChangeNew} />\r\n          </div>\r\n          <label>새로운 닉네임 확인</label>\r\n          <div>\r\n            <input type='text' placeholder='Confirm your new nick' value={confirmNick} onChange={handleChangeConfirm} />\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n          <button type='submit'>확인</button>\r\n          <button type='button' onClick={handleClose}>닫기</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Load_changednick;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Mypage.css'; // CSS 파일 추가\r\nimport LoadingModal from './Load_changepwd'; // LoadingModal 추가\r\nimport Load_changednick from './Load_changednick'; // LoadingModal 추가\r\n\r\nconst Mypage = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const [posts, setPosts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false); // 로딩 상태를 나타내는 상태\r\n    const [isNickLoading, setIsNickLoading] = useState(false); // 로딩 상태를 나타내는 상태\r\n\r\n    // 이메일 가리기\r\n    const hideEmail = (email) => {\r\n        const atIndex = email.indexOf('@');\r\n        const firstChar = email.charAt(0);\r\n        const lastChar = email.charAt(atIndex + 1);\r\n        return `${firstChar}****@${lastChar}****`;\r\n    };\r\n\r\n    // 비밀번호 가리기\r\n    const hidePassword = (password) => {\r\n        const firstChar = password.charAt(0);\r\n        const hiddenPart = '*'.repeat(password.length - 1);\r\n        return `${firstChar}${hiddenPart}`;\r\n    };\r\n\r\n    // 전화번호 가리기\r\n    const hidePhoneNumber = (phoneNumber) => {\r\n        const firstPart = phoneNumber.substring(0, 5);\r\n        const secondPart = phoneNumber.substring(8, 10);\r\n        return `${firstPart}***-${secondPart}***`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:817/boards?phone=${user.phone}`);\r\n                const data = await response.json();\r\n                setPosts(data);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('데이터를 불러오는데 실패했습니다');\r\n                }\r\n            } catch (error) {\r\n                console.error('데이터를 불러오는 중 오류 발생:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(); // fetchData 함수 호출\r\n    }, [user.name]);\r\n\r\n    // 비밀번호 변경 클릭 시\r\n    const handlePasswordChange = () => {\r\n        setIsLoading(true); \r\n    };\r\n\r\n    // LoadingModal 닫기 함수\r\n    const handleCloseModal1 = () => {\r\n        setIsLoading(false); // 로딩 상태를 false로 변경하여 모달을 닫음\r\n    };\r\n\r\n    const handleNickChange = () => {\r\n        setIsNickLoading(true); \r\n    };\r\n\r\n    const handleCloseModal2 = () => {\r\n        setIsNickLoading(false); // 로딩 상태를 false로 변경하여 모달을 닫음\r\n    };\r\n\r\n\r\n    const del = (postId) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            fetch(`http://localhost:817/boards/${postId}`, {\r\n                method: \"DELETE\",\r\n            })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('게시물을 삭제하는데 실패했습니다');\r\n                }\r\n                // 성공적으로 삭제되었을 때 UI에서 해당 게시물을 제거합니다.\r\n                setPosts(posts.filter(post => post.id !== postId));\r\n            })\r\n            .catch(error => console.error('게시물 삭제 중 오류 발생:', error));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='mypage-container'>\r\n            <h1 className='header_logo'>\r\n                <Link to='/'>MOTIV</Link>\r\n            </h1>\r\n            <div className='user-info'>\r\n                <div className='info-label'>이름: {user.name}</div>\r\n                <div className='info-label'>이메일: {hideEmail(user.ID)}</div>\r\n                <div className='info-label'>닉네임: {user.nick}</div>\r\n                <Link className='change-password-link' onClick={handleNickChange}>\r\n                    <div className='change-password'>닉네임 변경</div>\r\n                </Link>\r\n                <div className='info-label'>비밀번호: {hidePassword(user.pwd)}</div>\r\n                <Link className='change-password-link' onClick={handlePasswordChange}>\r\n                    <div className='change-password'>비밀번호 변경</div>\r\n                </Link>\r\n                <div className='hidden-info'>{user.pwd}</div>\r\n                <div className='info-label'>전화번호: {hidePhoneNumber(user.phone)}</div>\r\n                <div className='hidden-info'>{user.phone}</div>\r\n            </div>\r\n            <div className='user-posts'>\r\n                {posts.map(board =>\r\n                    <div key={board.id} className='post'>\r\n                        <Link to={`/inboard/${board.id}`} className='post-link'>\r\n                            <h3 className='post-title'>제목: {board.titleBoard}</h3>\r\n                        </Link>\r\n                        <button onClick={() => del(board.id)}>삭제</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {isLoading && <LoadingModal onClose={handleCloseModal1} />} {/* isLoading이 true일 때 LoadingModal을 렌더링 */}\r\n            {isNickLoading && <Load_changednick onClose={handleCloseModal2} />} {/* isLoading이 true일 때 LoadingModal을 렌더링 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mypage;\r\n"],"names":["_ref","onClose","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","user","JSON","parse","localStorage","getItem","navigator","useNavigate","ReactDOM","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","test","fetch","concat","id","method","headers","body","stringify","ID","name","pwd","birth","phone","nick","ok","Error","alert","removeItem","console","type","placeholder","value","onChange","target","onClick","handleClose","document","currentNick","setCurrentNick","newNick","setNewNick","confirmNick","setConfirmNick","nickResponse","json","length","Mypage","posts","setPosts","isLoading","setIsLoading","isNickLoading","setIsNickLoading","useEffect","response","data","fetchData","Link","to","email","atIndex","indexOf","firstChar","charAt","lastChar","hideEmail","handleNickChange","password","hiddenPart","repeat","hidePassword","handlePasswordChange","phoneNumber","firstPart","substring","secondPart","hidePhoneNumber","map","board","titleBoard","del","postId","window","confirm","then","filter","post","catch","LoadingModal","handleCloseModal1","Load_changednick","handleCloseModal2"],"sourceRoot":""}