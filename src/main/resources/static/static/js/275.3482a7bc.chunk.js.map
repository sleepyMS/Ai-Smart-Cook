{"version":3,"file":"static/js/275.3482a7bc.chunk.js","mappings":"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","sources":["components/Registerpage/Registerpage1.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './loginpage.module.css';\nimport axios from 'axios';\n\n\nconst Registerpage1 = () => {\n    const navigate = useNavigate();\n    const [birthDate, setBirthDate] = useState(\"2000-01-01\");\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [passwordVisible, setPasswordVisible] = useState(false);\n    const IDRef = useRef(null);\n    const pwdRef = useRef(null);\n    const pwdCheckRef = useRef(null);\n    const nameRef = useRef(null);\n    const nickRef = useRef(null);\n\n    const handleBirthDateChange = (e) => {\n        setBirthDate(e.target.value);\n    };\n    //폰 번호 유효성 검사\n    const handlePhoneNumberChange = (e) => {\n        const value = e.target.value;\n        const formattedPhoneNumber = value.replace(/\\D/g, '');\n        if (formattedPhoneNumber.length > 11) {\n            alert(\"휴대폰 번호는 11자리 이하여야 합니다. 다시 입력해주세요.\");\n            e.target.disabled = true;\n            setTimeout(() => {\n                e.target.disabled = false;\n                e.target.focus();\n            }, 100); // \n        } else {\n            if (formattedPhoneNumber.length >= 4 && formattedPhoneNumber.length < 8) {\n                setPhoneNumber(`${formattedPhoneNumber.slice(0, 3)}-${formattedPhoneNumber.slice(3)}`);\n            } else if (formattedPhoneNumber.length >= 8) {\n                setPhoneNumber(`${formattedPhoneNumber.slice(0, 3)}-${formattedPhoneNumber.slice(3, 7)}-${formattedPhoneNumber.slice(7)}`);\n            } else {\n                setPhoneNumber(formattedPhoneNumber);\n            }\n        }\n    };\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n\n        // 이메일 형식 검사\n        const emailPattern = /\\S+@\\S+\\.\\S+/;\n        if (!emailPattern.test(IDRef.current.value)) {\n            alert(\"올바른 이메일 주소를 입력해주세요.\");\n            IDRef.current.focus();\n            return;\n        }\n\n        // 패스워드 유효성 검사\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,20}$/;\n        if (!passwordPattern.test(pwdRef.current.value)) {\n            alert(\"패스워드는 영어, 숫자, 특수문자를 포함한 6~20자 이내로 입력해주세요.\");\n            pwdRef.current.focus();\n            return;\n        }\n\n        // 유효성 검사 통과시에만 회원가입 요청\n        try {\n                await axios.post(\"http://localhost:8080/user/auth/signUp\", {\n                        email: IDRef.current.value,\n                        name: nameRef.current.value,\n                        password: pwdRef.current.value,\n                        confirmPassword: pwdCheckRef.current.value,\n                        birth: birthDate,\n                        phone: phoneNumber,\n                        nick: nickRef.current.value\n                    })\n                    .then((response) => {\n                        console.log(response.data)\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n                    navigate('/')\n                }\n            catch (error) {\n                console.error('Error:', error);\n            }\n    }\n\n    return (\n        <>\n            <h1 className='header_logo'>\n                <a href=\"/\">\n                    <span>MOTIV</span>\n                </a>\n            </h1>\n            <div style={{ \n                display: 'flex', justifyContent: 'center', alignItems: 'center', \n                width: '100%', height: '100vh'\n                }}>\n                <form  style={{ display: 'flex', flexDirection: 'column'}} onSubmit={onSubmit} >\n                    <label>이름</label>\n                    <input type=\"text\" placeholder=\"김정호\" ref ={nameRef} required/>\n                    <label>별명</label>\n                    <input type=\"text\" placeholder=\"별명\" ref ={nickRef} required/>\n                    <label>아이디</label>\n                    <input type=\"email\" placeholder=\"com@example.co.kr\" ref ={IDRef} required/>\n                    <label>비밀번호</label>\n                    <input \n                        type={passwordVisible ? \"text\" : \"password\"} \n                        placeholder=\"*********\" \n                        ref ={pwdRef}\n                        onClick={(e) => e.stopPropagation()}\n                        onBlur={() => pwdRef.current.type = \"password\"}\n                        required\n                    />\n                    <label>비밀번호 확인</label>\n                    <input \n                        type={passwordVisible ? \"text\" : \"password\"} \n                        placeholder=\"*********\" \n                        ref ={pwdCheckRef}\n                        onClick={(e) => e.stopPropagation()}\n                        onBlur={() => pwdCheckRef.current.type = \"password\"}\n                        required\n                    />\n                    <label>생년월일</label>\n                    <input type=\"date\" value={birthDate} onChange={handleBirthDateChange}/>\n                    <label>휴대폰번호</label>\n                    <input type=\"text\" placeholder=\"010-1234-5678\" value={phoneNumber} onChange={handlePhoneNumberChange} required/>\n                    <br />\n                    <button>완료</button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default Registerpage1;\n"],"names":["Registerpage1","navigate","useNavigate","birthDate","setBirthDate","useState","phoneNumber","setPhoneNumber","passwordVisible","setPasswordVisible","IDRef","useRef","pwdRef","pwdCheckRef","nameRef","nickRef","_jsxs","_Fragment","children","_jsx","className","href","style","display","justifyContent","alignItems","width","height","flexDirection","onSubmit","async","e","preventDefault","test","current","value","alert","focus","axios","post","email","name","password","confirmPassword","birth","phone","nick","then","response","console","log","data","catch","error","type","placeholder","ref","required","onClick","stopPropagation","onBlur","onChange","target","formattedPhoneNumber","replace","length","disabled","setTimeout","concat","slice"],"sourceRoot":""}