{"version":3,"file":"static/js/632.e74def26.chunk.js","mappings":"4KAGA,MAoCA,EApCeA,KACX,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7CC,GAAWC,EAAAA,EAAAA,MAUjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,SAAQC,UACZC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,cAAaH,UACxBF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,KAAIF,SAAC,oBAEzBF,EAAAA,EAAAA,KAAA,SACIM,KAAK,SACLL,GAAG,cACHM,YAAY,gEACZC,aAAa,MACbJ,UAAU,gBACVK,SAAUC,GAAKd,EAAiBc,EAAEC,OAAOC,OACzCC,UAAWH,IACO,UAAVA,EAAEI,MArBtBC,QAAQC,IAAIrB,GACRA,IACAG,EAAS,WAADmB,OAAYtB,IACpBC,EAAiB,KAoBL,QAIV,C","sources":["components/Search/Search.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Search = () => {\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSearch = () => {\r\n        console.log(searchKeyword)\r\n        if (searchKeyword) {\r\n            navigate(`/search/${searchKeyword}`);\r\n            setSearchKeyword('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id='search'>\r\n            <div className='search__inner'>\r\n                <label htmlFor='searchInput'>\r\n                    <span className='ir'>검색</span>\r\n                </label>\r\n                <input \r\n                    type='search' \r\n                    id='searchInput' \r\n                    placeholder='검색어를 입력해주세요' \r\n                    autoComplete='off' \r\n                    className='search__input' \r\n                    onChange={e => setSearchKeyword(e.target.value)}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'Enter') {\r\n                            handleSearch();\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search"],"names":["Search","searchKeyword","setSearchKeyword","useState","navigate","useNavigate","_jsx","id","children","_jsxs","className","htmlFor","type","placeholder","autoComplete","onChange","e","target","value","onKeyDown","key","console","log","concat"],"sourceRoot":""}