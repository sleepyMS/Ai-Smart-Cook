{"version":3,"file":"static/js/354.ca586a87.chunk.js","mappings":"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","sources":["components/Mypage/Load_changepwd.jsx","components/Mypage/Load_changednick.jsx","components/Mypage/Mypage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Load_changepwd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Loadingmodal = ({ onClose }) => {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const navigator = useNavigate();\r\n\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentPassword(e.target.value);\r\n  };\r\n\r\n  const handleChangeNew = (e) => {\r\n    setNewPassword(e.target.value);\r\n  };\r\n\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,20}$/;\r\n        if (!passwordPattern.test(newPassword)) {\r\n            alert(\"패스워드는 영어, 숫자, 특수문자를 포함한 6~20자 이내로 입력해주세요.\");\r\n            return;\r\n        }\r\n        if(currentPassword === newPassword){\r\n          alert(\"현재 사용 중인 비밀번호입니다.\")\r\n          return;\r\n        }\r\n    try {\r\n      const response = await fetch(`http://localhost:817/peoples/${user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n            ID: user.ID,\r\n            name: user.name,\r\n            pwd: newPassword ,\r\n            birth: user.birth,\r\n            phone: user.phone,\r\n            nick: user.nick\r\n        })\r\n      });\r\n        \r\n      if (!response.ok) {\r\n        throw new Error('비밀번호 변경에 실패했습니다.');\r\n      }\r\n\r\n      alert('비밀번호가 성공적으로 변경되었습니다.');\r\n      localStorage.removeItem('user');\r\n      navigator('/');\r\n      onClose(); // 패스워드 변경 후 모달 닫기\r\n    } catch (error) {\r\n      console.error('비밀번호 변경 중 오류 발생:', error);\r\n      setError('비밀번호 변경에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose(); // 모달 닫기\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loading-modal\">\r\n      <div className=\"loading-content\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label>현재 비밀번호</label>\r\n          <div>\r\n            <input type='password' placeholder='Enter your current password' value={currentPassword} onChange={handleChangeCurrent} />\r\n          </div>\r\n          <label>새로운 비밀번호</label>\r\n          <div>\r\n            <input type='password' placeholder='Enter your new password' value={newPassword} onChange={handleChangeNew} />\r\n          </div>\r\n          <label>새로운 비밀번호 확인</label>\r\n          <div>\r\n            <input type='password' placeholder='Confirm your new password' value={confirmPassword} onChange={handleChangeConfirm} />\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n          <button type='submit'>확인</button>\r\n          <button type='button' onClick={handleClose}>닫기</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Loadingmodal;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Load_changepwd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Load_changednick = ({ onClose }) => {\r\n  const [currentNick, setCurrentNick] = useState('');\r\n  const [newNick, setNewNick] = useState('');\r\n  const [confirmNick, setConfirmNick] = useState('');\r\n  const [error, setError] = useState('');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const navigator = useNavigate();\r\n\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentNick(e.target.value);\r\n  };\r\n\r\n  const handleChangeNew = (e) => {\r\n    setNewNick(e.target.value);\r\n  };\r\n\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmNick(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const nickResponse = await fetch(`http://localhost:817/peoples/?nick=${newNick}`);\r\n      const nickData = await nickResponse.json();\r\n      if(nickData.length > 0){\r\n        alert(\"이미 같은 닉네임 정보가 존재합니다. 다시 입력해주세요.\");\r\n        return;\r\n      }\r\n      else{\r\n      const response = await fetch(`http://localhost:817/peoples/${user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n            ID: user.ID,\r\n            name: user.name,\r\n            pwd: user.pwd ,\r\n            birth: user.birth,\r\n            phone: user.phone,\r\n            nick: newNick\r\n        })\r\n      });\r\n      \r\n        \r\n      if (!response.ok) {\r\n        throw new Error('닉네임 변경에 실패했습니다.');\r\n      }\r\n\r\n      alert('닉네임이 성공적으로 변경되었습니다.');\r\n      localStorage.removeItem('user');\r\n      navigator('/');\r\n      onClose(); // 패스워드 변경 후 모달 닫기\r\n    } }catch (error) {\r\n      console.error('닉네임 변경 중 오류 발생:', error);\r\n      setError('닉네임 변경에 실패했습니다.');\r\n    }\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose(); // 모달 닫기\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"loading-modal\">\r\n      <div className=\"loading-content\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label>현재 닉네임</label>\r\n          <div>\r\n            <input type='text' placeholder='Enter your nick' value={currentNick} onChange={handleChangeCurrent} />\r\n          </div>\r\n          <label>새로운 닉네임</label>\r\n          <div>\r\n            <input type='text' placeholder='Enter your new nick' value={newNick} onChange={handleChangeNew} />\r\n          </div>\r\n          <label>새로운 닉네임 확인</label>\r\n          <div>\r\n            <input type='text' placeholder='Confirm your new nick' value={confirmNick} onChange={handleChangeConfirm} />\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n          <button type='submit'>확인</button>\r\n          <button type='button' onClick={handleClose}>닫기</button>\r\n        </form>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Load_changednick;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Mypage.css'; // CSS 파일 추가\r\nimport LoadingModal from './Load_changepwd'; // LoadingModal 추가\r\nimport Load_changednick from './Load_changednick'; // LoadingModal 추가\r\n\r\nconst Mypage = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const [posts, setPosts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false); // 로딩 상태를 나타내는 상태\r\n    const [isNickLoading, setIsNickLoading] = useState(false); // 로딩 상태를 나타내는 상태\r\n    const [profileImage, setProfileImage] = useState(null); // 프로필 이미지를 나타내는 상태\r\n\r\n    // 이메일 가리기\r\n    const hideEmail = (email) => {\r\n        const atIndex = email.indexOf('@');\r\n        const firstChar = email.charAt(0);\r\n        const lastChar = email.charAt(atIndex + 1);\r\n        return `${firstChar}****@${lastChar}****`;\r\n    };\r\n\r\n    // 비밀번호 가리기\r\n    const hidePassword = (password) => {\r\n        const firstChar = password.charAt(0);\r\n        const hiddenPart = '*'.repeat(password.length - 1);\r\n        return `${firstChar}${hiddenPart}`;\r\n    };\r\n\r\n    // 전화번호 가리기\r\n    const hidePhoneNumber = (phoneNumber) => {\r\n        const firstPart = phoneNumber.substring(0, 5);\r\n        const secondPart = phoneNumber.substring(8, 10);\r\n        return `${firstPart}***-${secondPart}***`;\r\n    };\r\n\r\n    \r\n    const handleImageChange = async (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            setProfileImage(reader.result);\r\n        };\r\n\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n        try{\r\n            const res = await fetch(`http://localhost:817/peoples/`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        ID: user.ID,\r\n                        name: user.name,\r\n                        pwd: user.pwd,\r\n                        birth: user.birth,\r\n                        phone: user.phone,\r\n                        nick: user.nick,\r\n                        img: profileImage\r\n                    }),\r\n                });\r\n                if (res.ok) {\r\n                    alert(\"생성이 완료되었습니다.\");\r\n                }\r\n        }\r\n        catch{\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:817/boards?phone=${user.phone}`);\r\n                const data = await response.json();\r\n                setPosts(data);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('데이터를 불러오는데 실패했습니다');\r\n                }\r\n            } catch (error) {\r\n                console.error('데이터를 불러오는 중 오류 발생:', error);\r\n            }\r\n        };\r\n\r\n        fetchData(); // fetchData 함수 호출\r\n    }, [user.name]);\r\n\r\n    // 비밀번호 변경 클릭 시\r\n    const handlePasswordChange = () => {\r\n        setIsLoading(true); \r\n    };\r\n\r\n    // LoadingModal 닫기 함수\r\n    const handleCloseModal1 = () => {\r\n        setIsLoading(false); // 로딩 상태를 false로 변경하여 모달을 닫음\r\n    };\r\n\r\n    const handleNickChange = () => {\r\n        setIsNickLoading(true); \r\n    };\r\n\r\n    const handleCloseModal2 = () => {\r\n        setIsNickLoading(false); // 로딩 상태를 false로 변경하여 모달을 닫음\r\n    };\r\n\r\n\r\n    const del = (postId) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            fetch(`http://localhost:817/boards/${postId}`, {\r\n                method: \"DELETE\",\r\n            })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('게시물을 삭제하는데 실패했습니다');\r\n                }\r\n                // 성공적으로 삭제되었을 때 UI에서 해당 게시물을 제거합니다.\r\n                setPosts(posts.filter(post => post.id !== postId));\r\n            })\r\n            .catch(error => console.error('게시물 삭제 중 오류 발생:', error));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='mypage-container'>\r\n            <h1 className='header_logo'>\r\n                <Link to='/'>MOTIV</Link>\r\n            </h1>\r\n            <div className='user-info'>\r\n                <div className='info-label'>프로필{user.name}</div>\r\n                {/* 프로필 이미지 출력 */}\r\n                {profileImage && (\r\n                    <img src={profileImage} alt=\"프로필 이미지\" className=\"profile-image\" />\r\n                )}\r\n                {/* 파일 선택(input type=\"file\") 추가 */}\r\n                <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n                <div className='info-label'>이름: {user.name}</div>\r\n                <div className='info-label'>이메일: {hideEmail(user.ID)}</div>\r\n                <div className='info-label'>닉네임: {user.nick}</div>\r\n                <Link className='change-password-link' onClick={handleNickChange}>\r\n                    <div className='change-password'>닉네임 변경</div>\r\n                </Link>\r\n                <div className='info-label'>비밀번호: {hidePassword(user.pwd)}</div>\r\n                <Link className='change-password-link' onClick={handlePasswordChange}>\r\n                    <div className='change-password'>비밀번호 변경</div>\r\n                </Link>\r\n                <div className='hidden-info'>{user.pwd}</div>\r\n                <div className='info-label'>전화번호: {hidePhoneNumber(user.phone)}</div>\r\n                <div className='hidden-info'>{user.phone}</div>\r\n            </div>\r\n            <div className='user-posts'>\r\n                {posts.map(board =>\r\n                    <div key={board.id} className='post'>\r\n                        <Link to={`/inboard/${board.id}`} className='post-link'>\r\n                            <h3 className='post-title'>제목: {board.titleBoard}</h3>\r\n                        </Link>\r\n                        <button onClick={() => del(board.id)}>삭제</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {isLoading && <LoadingModal onClose={handleCloseModal1} />} {/* isLoading이 true일 때 LoadingModal을 렌더링 */}\r\n            {isNickLoading && <Load_changednick onClose={handleCloseModal2} />} {/* isLoading이 true일 때 LoadingModal을 렌더링 */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mypage;\r\n"],"names":["_ref","onClose","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","user","JSON","parse","localStorage","getItem","navigator","useNavigate","ReactDOM","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","test","fetch","concat","id","method","headers","body","stringify","ID","name","pwd","birth","phone","nick","ok","Error","alert","removeItem","console","type","placeholder","value","onChange","target","onClick","handleClose","document","currentNick","setCurrentNick","newNick","setNewNick","confirmNick","setConfirmNick","nickResponse","json","length","Mypage","posts","setPosts","isLoading","setIsLoading","isNickLoading","setIsNickLoading","profileImage","setProfileImage","useEffect","response","data","fetchData","Link","to","src","alt","accept","file","event","files","reader","FileReader","onloadend","result","readAsDataURL","img","email","atIndex","indexOf","firstChar","charAt","lastChar","hideEmail","handleNickChange","password","hiddenPart","repeat","hidePassword","handlePasswordChange","phoneNumber","firstPart","substring","secondPart","hidePhoneNumber","map","board","titleBoard","del","postId","window","confirm","then","filter","post","catch","LoadingModal","handleCloseModal1","Load_changednick","handleCloseModal2"],"sourceRoot":""}