{"version":3,"file":"static/js/34.30a9e96f.chunk.js","mappings":"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","sources":["components/Recipewrite/Recipewrite.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"../../내가만든css/media.css\";\nimport \"../../내가만든css/style.css\";\n\nconst Recipewrite = () => {\n  const navigate = useNavigate();\n  const titleRef = useRef(null);\n  const postRef = useRef(null);\n  const indRef = useRef(null);\n  const tagRef = useRef(null); // useRef를 사용하여 선택된 태그 값을 저장\n  const [peopleName, setPeopleName] = useState(\"로그인\");\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setPeopleName(user.name);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    if (!localStorage.getItem('user')) {\n      alert(\"로그인이 되어있지않습니다.\")\n      const confirmLogin = window.confirm(\"로그인 하시겠습니까?\");\n      if (confirmLogin) {\n        navigate('/loginpage')\n      }\n    } else {\n      const confirmLogout = window.confirm(\"로그아웃 하시겠습니까?\");\n      if (confirmLogout) {\n        setPeopleName(\"로그인\");\n        localStorage.removeItem('user');\n      }\n    }\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const currentValue = postRef.current.value;\n      const lines = currentValue.split('\\n');\n      const lastLine = lines[lines.length - 1];\n      if (!lastLine) return; // 비어 있는 줄은 건너뜀\n      if (!lastLine.startsWith(lines.length + 1 + '. ')) {\n        postRef.current.value += `\\n${lines.length + 1}. `;\n      }\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const ID = JSON.parse(localStorage.getItem('user'));\n    if (!localStorage.getItem('user')) {\n      alert(\"로그인 후 이용해주세요.\");\n      return;\n    }\n    if (!titleRef.current.value || !postRef.current.value) {\n      alert(\"제목과 내용을 입력해주세요.\");\n      return;\n    }\n    try {\n      const currentTime = new Date(); // 현재 시간을 가져옴\n      const res = await fetch(`http://localhost:817/recipes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: ID.name,\n          ingredient: indRef.current.value,\n          titleBoard: titleRef.current.value,\n          post: postRef.current.value,\n          tag: tagRef.current.value,\n          time: currentTime.toISOString() // 현재 시간을 ISO 형식으로 변환하여 저장\n        }),\n      });\n      if (res.ok) {\n        alert(\"생성이 완료되었습니다.\");\n        navigate('/recipeboard');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <h1 className='header_logo'>\n        <a href=\"/\">\n          <span>MOTIV</span>\n        </a>\n        <button onClick={handleLogout}>{peopleName}</button>\n      </h1>\n      <div>\n        <form onSubmit={onSubmit}>\n          <h3>레시피 글 등록</h3>\n          <div className='board_write'>\n            <div className='title'>\n              <label>제목</label>\n              <input type=\"text\" placeholder=\"제목\" ref ={titleRef}/>\n            </div>\n            <div className='title'>\n              <label>재료</label>\n              <input type=\"text\" placeholder=\"재료\" ref ={indRef}/>\n            </div>\n            <div>\n              <label>카테고리</label>\n              <select ref={tagRef}> {/* 선택된 값을 useRef를 통해 가져오도록 설정 */}\n                <option>한식</option>\n                <option>중식</option>\n                <option>일식</option>\n                <option>양식</option>\n              </select>\n            </div>\n            <div className='info'>\n              글쓴이\n            </div>\n            <div className='cont'>\n              <label>글 내용</label>\n              <textarea \n                placeholder=' 1.\n                            2.\n                            3.\n                            4.' \n                defaultValue='' \n                ref={postRef} \n                onKeyDown={handleKeyDown} \n              />\n            </div>\n            <button>등록하기</button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Recipewrite;\n"],"names":["Recipewrite","navigate","useNavigate","titleRef","useRef","postRef","indRef","tagRef","peopleName","setPeopleName","useState","useEffect","user","JSON","parse","localStorage","getItem","name","_jsxs","_Fragment","children","className","_jsx","href","onClick","handleLogout","window","confirm","removeItem","alert","onSubmit","async","e","preventDefault","ID","current","value","currentTime","Date","fetch","method","headers","body","stringify","ingredient","titleBoard","post","tag","time","toISOString","ok","error","console","log","type","placeholder","ref","defaultValue","onKeyDown","key","lines","split","lastLine","length","startsWith","concat"],"sourceRoot":""}